(window.webpackJsonp=window.webpackJsonp||[]).push([[2],[,,,,function(t,e,i){"use strict";const{Store:r,get:s,set:n,clear:a}=i(6),o=new r("automizely-db","automizely-store");e.get=function(t){return s(t,o)},e.set=function(t,e){return n(t,e,o)},e.clear=function(){return a(o)}},function(t,e,i){"use strict";const r=i(7),s=i(8),{set:n,get:a}=i(4),o=i(11),{callAutomizely:c}=i(0),u=i(12);e.get=function(t){return t.pushManager.getSubscription().catch(t=>{throw new Error(`Get subscription failed : ${t.message}`)})},e.subscribe=async function({registration:t,Notification:e}){if("granted"===await e.requestPermission()){const e=o("BLIflG97dExGqkzCAY5u6R7S_hIws5DmOmY0caUhWWgGS_88lFDPLkZ-5fzz_eAkKB9_F2q_Esk-zqZm9TOwPLM");try{return await t.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:e})}catch(t){throw new Error(`Subscribe failed : ${t.message}`)}}return null},e.unsubscribe=async function(t){try{await t.unsubscribe()}catch(t){}},e.save=async function({subscription:t,app_id:i}){const{endpoint:a,expirationTime:o,keys:{auth:p,p256dh:w}}=JSON.parse(JSON.stringify(t)),g=r.getParser(window.navigator.userAgent),d=s.determine().name(),l=Object.assign({app:{id:i},endpoint:a,keys:{p256dh:w,auth:p},attributes:{browser_type:g.getBrowserName().toLowerCase(),os_type:u.transform(g.getOSName()),timezone:d}},o&&{expiration_time:o}),{data:f}=await c("/web-push-subscriptions",{method:"POST",body:JSON.stringify(l)}).catch(async i=>{throw await e.unsubscribe(t),new Error(`Create Automizely subscription failed: ${i.message}`)});await n("subscription_secret",f.secret),await n("subscription_id",f.id),await n("app_id",i)},e.update=async function({subscription:t}){const{endpoint:e,expirationTime:i,keys:{auth:n,p256dh:o}}=JSON.parse(JSON.stringify(t)),p=await a("subscription_id"),w=await a("app_id"),g=r.getParser(window.navigator.userAgent),d=s.determine().name(),l={app:{id:w},endpoint:e,keys:{p256dh:o,auth:n},attributes:{browser_type:g.getBrowserName().toLowerCase(),os_type:u.transform(g.getOSName()),timezone:d},...i&&{expiration_time:i}};await c(`/web-push-subscriptions/${p}`,{method:"PATCH",body:JSON.stringify(l)}).catch(t=>{throw new Error(`Update Automizely subscription failed: ${t.message}`)})}},,,,,,function(t,e,i){"use strict";t.exports=function(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),i=window.atob(e),r=new Uint8Array(i.length);for(let t=0;t<i.length;++t)r[t]=i.charCodeAt(t);return r}},function(t,e,i){"use strict";e.transform=t=>t.toLowerCase().replace(" ","_")},,,,,,,,,,,function(t,e,i){"use strict";(function(e){const r=i(24),s=i(5),n=i(13),{clear:a,set:o}=i(4),c=i(26);t.exports=async function(){const t=await r.register("/apps/automizely-messages/service_worker.js");if(await s.get(t)){const t=await n.getFromScriptTag(document);return void await o("app_id",t)}await a();const i=await s.subscribe({registration:t,Notification:window.Notification});if(!i)return;const u=await n.getFromScriptTag(document);if(!u)throw new Error("no app_id available.");e.automizely_messages_sdk=e.automizely_messages_sdk||{...c},await s.save({subscription:i,app_id:u})}}).call(this,i(25))},function(t,e,i){"use strict";e.get=async function(t){try{return await navigator.serviceWorker.getRegistration(t)}catch(t){return null}},e.register=async function(t){try{return await navigator.serviceWorker.register(t)}catch(t){throw new Error(`ServiceWorker registration failed : ${t.message}`)}}},,function(t,e,i){"use strict";const r=i(27);t.exports={getCurrentSubscription:r}},function(t,e,i){"use strict";const r=i(24),s=i(5),{get:n}=i(4);t.exports=async function(){if(!("serviceWorker"in navigator))return null;const t=await r.get("/apps/automizely-messages/service_worker.js");if(!t)return null;if(!await s.get(t))return null;const[e,i]=await Promise.all([n("subscription_id"),n("app_id")]);return i&&e?{web_push_subscription_id:e,app_id:i}:null}}]]);